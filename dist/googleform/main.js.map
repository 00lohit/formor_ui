{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/form-data/form-data.component.ts","./src/app/form-data/form-data.component.html","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/app-routing.module.ts","./src/app/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { FormsModule } from '@angular/forms';\nimport { FormDataComponent } from './form-data/form-data.component';\n\n@NgModule({\n  declarations: [AppComponent, FormComponent, FormDataComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../config.service';\nimport { map } from 'rxjs/operators';\n\nimport { Data } from '../app.data';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-data',\n  templateUrl: './form-data.component.html',\n  styleUrls: ['./form-data.component.scss'],\n})\nexport class FormDataComponent implements OnInit {\n  data: Data[] = [];\n  results: any = [];\n  constructor(private configService: ConfigService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  home() {\n    this.router.navigateByUrl('/enroll');\n  }\n\n  getData() {\n    this.configService.get().subscribe(\n      (res: any) => {\n        this.results = res.data.data;\n      },\n      (err) => console.log(err)\n    );\n  }\n}\n","<div class=\"container\">\n  <h4>Enrolled List</h4>\n</div>\n\n<button class=\"btn btn-success home__btn\" (click)=\"home()\">Home</button>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <table class=\"table table-bordered mt-4\" *ngFor=\"let result of results\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Farmer Details</th>\n          <th scope=\"col\">Crop Details</th>\n          <th scope=\"col\">Previous Harvest Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td scope=\"row\"><span>Name: </span> {{ result.name }}</td>\n          <td><span>Crop: </span> {{ result.cropNameFirst }}</td>\n          <td><span>Prev. Harvest Crop: </span> {{ result.prevCrop }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\"><span>Mobile: </span> {{ result.mobileNumber }}</td>\n          <td><span>Variety: </span> {{ result.varietyFirst }}</td>\n          <td><span>Prev. Harvest Variety: </span> {{ result.prevVariety }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\">\n            <span>Road Access: </span> {{ result.access }} Kms\n          </td>\n          <td><span>Acres: </span> {{ result.acresFirst }}</td>\n          <td><span>Prev. Harvest Type: </span> {{ result.prevAcre }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\"><span>Village: </span> {{ result.village }}</td>\n          <td><span>Type: </span> {{ result.cropTypeFirst }}</td>\n          <td><span>Prev. Harvest Acres: </span> {{ result.prevType }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\"><span>District: </span> {{ result.district }}</td>\n          <td><span>Sown Week: </span> {{ result.sownWeekFirst }}</td>\n          <td>\n            <span>Prev. Harvest Selling: </span> {{ result.prevSellRate }}\n          </td>\n        </tr>\n        <tr>\n          <td scope=\"row\"><span>State: </span> {{ result.state }}</td>\n          <td><span>Sown Month: </span> {{ result.sownMonthFirst }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\">\n            <span>Exp. Harvest Date: </span> {{ result.expHarvDate }}\n          </td>\n          <td><span>Crop Second: </span> {{ result.cropNameSecond }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\">\n            <span>Exp. Harvest Month: </span> {{ result.expHarvMonth }}\n          </td>\n          <td><span>Variety Second: </span> {{ result.varietySecond }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\">\n            <span>Exp. Harvest Year: </span> {{ result.expHarvYear }}\n          </td>\n          <td><span>Acres Second: </span> {{ result.acresSecond }}</td>\n        </tr>\n        <tr>\n          <td scope=\"row\">\n            <span>Exp. Harvest Output: </span>\n            {{ result.expHarvOutput }} /quintal\n          </td>\n          <td><span>Type Second: </span> {{ result.cropTypeSecond }}</td>\n        </tr>\n        <tr>\n          <td>\n            <span>Id: </span> Farmor_{{ result.district.slice(0, 3) }}__00{{\n              results.length\n            }}\n          </td>\n          <td><span>Sown Second: </span> {{ result.sownWeekSecond }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../config.service';\n\nimport { Data } from '../app.data';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent implements OnInit {\n  @ViewChild('f') formFields: NgForm | any;\n  crops: any = ['First'];\n  newCrop: any = ['Second', 'Third', 'Fourth', 'Fifth'];\n  count: number = 0;\n  state: string = 'Telangana';\n  district: string = 'Yadadri Bhuvanagiri';\n  year = new Date().getFullYear();\n  bags: any = '';\n  quintal: any;\n\n  mobNumberPattern = '^((\\\\+91-?)|0)?[0-9]{10}$';\n\n  constructor(private configService: ConfigService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  addCrop() {\n    this.count++;\n    this.crops.push(this.newCrop[this.count - 1]);\n  }\n\n  deleteCrop() {\n    if (this.crops.length > 1) {\n      this.crops.pop();\n      this.count--;\n    }\n  }\n\n  convert() {\n    this.quintal = (this.bags * 72) / 100;\n    this.bags = '';\n  }\n\n  // /* To copy Text from Textbox */\n  // copyInputMessage(inputElement: any) {\n  //   inputElement.select();\n  //   document.execCommand('copy');\n  //   inputElement.setSelectionRange(0, 0);\n  // }\n\n  onSubmit(f: Data) {\n    console.log(f);\n    this.configService.post(f).subscribe(\n      (res) => {\n        alert('Data Submitted Succesfully!');\n        this.router.navigateByUrl('/enrolled-list');\n        this.formFields.reset();\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"form\">\n  <div class=\"container\">\n    <div class=\"main__title\">\n      <!-- <h1 class=\"main__heading\">Cropdata - FarmOR</h1> -->\n      <img src=\"../../assets/images/Logo.png\" alt=\"Logo\" class=\"logo\" />\n    </div>\n    <form (ngSubmit)=\"onSubmit(f.value)\" #f=\"ngForm\">\n      <h2>Details Panel</h2>\n      <div class=\"panel__group\">\n        <div class=\"user__data\">\n          <div class=\"form-group\">\n            <label for=\"name\"\n              >Name of Farmer<span class=\"mandatory\">*</span></label\n            >\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"name\"\n              ngModel\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"number\"\n              >Mobile Number<span class=\"mandatory\">*</span></label\n            >\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"mobileNumber\"\n              [ngModel]=\"f.value?.mobileNumber\"\n              [pattern]=\"mobNumberPattern\"\n              mobNumber\n              #mobileNumber=\"ngModel\"\n              required\n            />\n            <small\n              class=\"form-text text__danger\"\n              *ngIf=\"mobileNumber.errors && mobileNumber.touched\"\n              >Please Enter a Valid Mobile Number</small\n            >\n            <!-- test -->\n            <!-- <div *ngIf=\"mobNumber.errors && mobNumber.touched\">\n              <div *ngIf=\"mobNumber.errors.pattern\">\n                Mobile number not valid.\n              </div>\n            </div> -->\n            <!-- test end -->\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"access\"\n                >Road Access\n                <span class=\"label__subtext text-muted\">(in Kms)</span\n                ><span class=\"mandatory\"> *</span></label\n              >\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                name=\"access\"\n                ngModel\n                required\n              />\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"village\"\n                >Village / Town<span class=\"mandatory\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"village\"\n                ngModel\n                required\n              />\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"\">District<span class=\"mandatory\">*</span></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"district\"\n                [(ngModel)]=\"district\"\n                required\n              />\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"\">State<span class=\"mandatory\">*</span></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"state\"\n                [(ngModel)]=\"state\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h2>Cultivation Details</h2>\n      <div class=\"panel__group\">\n        <div class=\"crop-details\" *ngFor=\"let crop of crops\">\n          <div class=\"form-group\">\n            <label\n              >Name of the {{ crop }} Crop<span class=\"mandatory\"\n                >*</span\n              ></label\n            >\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"cropName{{ crop }}\"\n              ngModel\n              required\n            />\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label>Variety<span class=\"mandatory\">*</span></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"variety{{ crop }}\"\n                ngModel\n                required\n              />\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>No of Acres<span class=\"mandatory\">*</span></label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                name=\"acres{{ crop }}\"\n                ngModel\n                required\n              />\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label>Type<span class=\"mandatory\">*</span></label>\n            <div class=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"cropType{{ crop }}\"\n                  ngModel\n                  required\n                  value=\"organic\"\n                />\n                Organic </label\n              ><br />\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"cropType{{ crop }}\"\n                  ngModel\n                  required\n                  value=\"conventional\"\n                />\n                Conventional\n              </label>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label for=\"week\"\n                >Sown Week<span class=\"mandatory\">*</span></label\n              >\n              <select\n                class=\"form-control\"\n                id=\"weeks\"\n                name=\"sownWeek{{ crop }}\"\n                ngModel\n                required\n              >\n                <option value=\"\" hidden>Select a Week</option>\n                <option value=\"week-1\">Week-1</option>\n                <option value=\"week-2\">Week-2</option>\n                <option value=\"week-3\">Week-3</option>\n                <option value=\"week-4\">Week-4</option>\n                <option value=\"week-5\">Week-5</option>\n              </select>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Month<span class=\"mandatory\">*</span></label>\n              <select\n                class=\"form-control\"\n                name=\"sownMonth{{ crop }}\"\n                ngModel\n                required\n              >\n                <option value=\"\" hidden>Select a Month</option>\n                <option value=\"January\">January</option>\n                <option value=\"February\">February</option>\n                <option value=\"March\">March</option>\n                <option value=\"April\">April</option>\n                <option value=\"May\">May</option>\n                <option value=\"June\">June</option>\n                <option value=\"July\">July</option>\n                <option value=\"August\">August</option>\n                <option value=\"September\">September</option>\n                <option value=\"October\">October</option>\n                <option value=\"November\">November</option>\n                <option value=\"December\">December</option>\n              </select>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Year<span class=\"mandatory\">*</span></label>\n              <select\n                class=\"form-control\"\n                name=\"sownYear{{ crop }}\"\n                ngModel\n                required\n              >\n                <option value=\"\" hidden>Select a Year</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <button\n          class=\"btn btn-success btn__crop-add\"\n          type=\"button\"\n          (click)=\"addCrop()\"\n        >\n          Add Crop\n        </button>\n        <button\n          class=\"btn btn-danger btn__crop-delete\"\n          type=\"button\"\n          (click)=\"deleteCrop()\"\n          *ngIf=\"crops.length > 1\"\n        >\n          Delete Crop\n        </button>\n      </div>\n\n      <h2>Harvest details</h2>\n      <div class=\"panel__group\">\n        <!-- <div class=\"form-group\">\n          <label>Expected harvest date</label>\n          <input\n            type=\"week\"\n            class=\"form-control\"\n            name=\"expharvestdate\"\n            ngModel\n            required\n          />\n        </div> -->\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label>Expected harvest date<span class=\"mandatory\">*</span></label>\n            <select class=\"form-control\" name=\"expHarvDate\" ngModel required>\n              <option value=\"\" hidden>Select a Week</option>\n              <option value=\"week-1\">Week-1</option>\n              <option value=\"week-2\">Week-2</option>\n              <option value=\"week-3\">Week-3</option>\n              <option value=\"week-4\">Week-4</option>\n              <option value=\"week-5\">Week-5</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label>Month<span class=\"mandatory\">*</span></label>\n            <select class=\"form-control\" name=\"expHarvMonth\" ngModel required>\n              <option value=\"\" hidden>Select a Month</option>\n              <option value=\"January\">January</option>\n              <option value=\"February\">February</option>\n              <option value=\"March\">March</option>\n              <option value=\"April\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"September\">September</option>\n              <option value=\"October\">October</option>\n              <option value=\"November\">November</option>\n              <option value=\"December\">December</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label>Year<span class=\"mandatory\">*</span></label>\n            <select class=\"form-control\" name=\"expHarvYear\" ngModel required>\n              <option value=\"\" hidden>Select a Year</option>\n              <option value=\"2020\">2020</option>\n              <option value=\"2021\">2021</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label\n            >Expected output\n            <span class=\"label__subtext text-muted\">(in Quintal)</span></label\n          >\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"expHarvOutput\"\n            [(ngModel)]=\"quintal\"\n            required\n          />\n        </div>\n        <span>\n          <a\n            class=\"convert__btn\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            style=\"cursor: pointer\"\n            >Convert Bags to Quintal</a\n          >\n        </span>\n      </div>\n\n      <h2>Previous Harvest details</h2>\n      <div class=\"panel__group\">\n        <div class=\"form-group\">\n          <label>Name of the Previous Crop</label>\n          <input type=\"text\" class=\"form-control\" name=\"prevCrop\" ngModel />\n        </div>\n        <div class=\"form-group\">\n          <label>Variety</label>\n          <input type=\"text\" class=\"form-control\" name=\"prevVariety\" ngModel />\n        </div>\n        <div class=\"form-group\">\n          <label>No of Acres</label>\n          <input type=\"number\" class=\"form-control\" name=\"prevAcre\" ngModel />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Type</label>\n          <div class=\"radio\">\n            <label>\n              <input type=\"radio\" name=\"prevType\" value=\"organic\" ngModel />\n              Organic </label\n            ><br />\n            <label>\n              <input\n                type=\"radio\"\n                name=\"prevType\"\n                value=\"conventional\"\n                ngModel\n              />\n              Conventional\n            </label>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label\n            >Selling Rate\n            <span class=\"label__subtext text-muted\"\n              >(eg: /quintal/bag)</span\n            ></label\n          >\n          <input type=\"text\" class=\"form-control\" name=\"prevSellRate\" ngModel />\n        </div>\n      </div>\n      <button\n        class=\"btn btn-success btn-block btn__submit\"\n        type=\"submit\"\n        [disabled]=\"!f.valid\"\n      >\n        Submit Data\n      </button>\n    </form>\n  </div>\n</div>\n\n<!-- Modal -->\n<div\n  class=\"modal fade\"\n  id=\"exampleModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n          Convert Bags to Quintal\n        </h5>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body my-2\">\n        <div class=\"conversion__body\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"bags\">No of Bags</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                name=\"bags\"\n                [(ngModel)]=\"bags\"\n              />\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"bags\">In Quintal</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                placeholder=\"{{ quintal }}\"\n                value=\"{{ quintal }}\"\n                #val\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal__btn-box\">\n        <button class=\"btn btn-primary btn__modal mr-3\" (click)=\"convert()\">\n          Convert\n        </button>\n        <!-- <button\n          class=\"btn btn-success btn__modal\"\n          (click)=\"copyInputMessage(val)\"\n          value=\"click to copy\"\n        >\n          Copy Result\n        </button> -->\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormDataComponent } from './form-data/form-data.component';\nimport { FormComponent } from './form/form.component';\n\nconst routes: Routes = [\n  { path: 'enroll', component: FormComponent },\n  { path: 'enrolled-list', component: FormDataComponent },\n  { path: '', redirectTo: 'enroll', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Data } from './app.data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  _url = window.location.origin + '/api/v1/data';\n\n  constructor(private http: HttpClient) {}\n\n  post(data: Data) {\n    return this.http.post(this._url, data);\n  }\n\n  get() {\n    return this.http.get(this._url);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}